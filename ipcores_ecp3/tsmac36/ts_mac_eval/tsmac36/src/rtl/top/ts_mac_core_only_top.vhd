-------------------------------------------------------------------------------
-- Verilog module generated by IPExpress    
-- Filename: ts_mac_core_only_top.vhd
-- Copyright(c) 2005 Lattice Semiconductor Corporation. All rights reserved.   
-------------------------------------------------------------------------------

--WARNING - Changes to this file should be performed by re-running IPexpress
--or modifying the .LPC file and regenerating the core.  Other changes may lead
--to inconsistent simulation and/or implemenation results 
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;

entity ts_mac_core_only_top is 
port(
   --------------- clock and reset port declarations ------------------
   hclk             : in std_logic;
   txmac_clk        : in std_logic;
   rxmac_clk        : in std_logic;
   reset_n          : in std_logic;
   txmac_clk_en     : in std_logic;
   rxmac_clk_en     : in std_logic;
   
   ------------------- Input signals to the GMII ----------------
   rxd              : in std_logic_vector(7 downto 0);
   rx_dv            : in std_logic;
   rx_er            : in std_logic;
   col              : in std_logic;
   crs              : in std_logic;
   
   -------------------- Input signals to the CPU I/F -------------------
   haddr            : in std_logic_vector(7 downto 0);
   hdatain          : in std_logic_vector(7 downto 0);
   hcs_n            : in std_logic;
   hwrite_n         : in std_logic;
   hread_n          : in std_logic;
   -------------------- Input signals to the Tx MAC FIFO Interface----
   tx_fifodata      : in std_logic_vector(7 downto 0);
   tx_fifoavail     : in std_logic;
   tx_fifoeof       : in std_logic;
   tx_fifoempty     : in std_logic;
   tx_sndpaustim    : in std_logic_vector(15 downto 0);
   tx_sndpausreq    : in std_logic;
   tx_fifoctrl      : in std_logic;
    
   -------------------- Input signals to the Rx MAC FIFO Interface ----
   rx_fifo_full     : in std_logic;
   ignore_pkt       : in std_logic;
         
   -------------------- Output signals from the GMII -----------------------
   txd              : out std_logic_vector(7 downto 0);  
   tx_en            : out std_logic;
   tx_er            : out std_logic;
   -------------------- Output signals from the CPU I/F -------------------
   hdataout         : out std_logic_vector(7 downto 0);
   hdataout_en_n    : out std_logic;
   hready_n         : out std_logic;
   cpu_if_gbit_en   : out std_logic;
     
   ---------------- Output signals from the Tx MAC FIFO I/F ---------------
   tx_macread       : out std_logic;
   tx_discfrm       : out std_logic;
   tx_staten        : out std_logic;
   tx_done          : out std_logic;
   tx_statvec       : out std_logic_vector(30 downto 0);
     
   ---------------- Output signals from the Rx MAC FIFO I/F --------------- 
   rx_fifo_error    : out std_logic;
   rx_stat_vector   : out std_logic_vector(31 downto 0);
   rx_dbout         : out std_logic_vector(7 downto 0);
   rx_write         : out std_logic;
   rx_stat_en       : out std_logic;
   rx_eof           : out std_logic;
   rx_error         : out std_logic
     
   );
end ts_mac_core_only_top;
  
architecture ts_mac_core_only_top_a of ts_mac_core_only_top is
component tsmac36            
   port (                            
   --------------- clock and reset port declarations ------------------
   hclk            : in std_logic;
   txmac_clk       : in std_logic;
   rxmac_clk       : in std_logic;
   reset_n         : in std_logic;
   txmac_clk_en     : in std_logic;
   rxmac_clk_en     : in std_logic;
   
   ------------------- Input signals to the GMII ----------------
   rxd              : in std_logic_vector(7 downto 0);
   rx_dv            : in std_logic;
   rx_er            : in std_logic;
   col              : in std_logic;
   crs              : in std_logic;
     
   -------------------- Input signals to the CPU I/F -------------------
   haddr           : in std_logic_vector(7 downto 0);
   hdatain         : in std_logic_vector(7 downto 0);
   hcs_n           : in std_logic;
   hwrite_n        : in std_logic;
   hread_n         : in std_logic;
   
   ---------------- Input signals to the Tx MAC FIFO I/F ---------------
   tx_fifodata     : in std_logic_vector(7 downto 0);
   tx_fifoavail    : in std_logic;
   tx_fifoeof      : in std_logic;
   tx_fifoempty    : in std_logic;
   tx_sndpaustim   : in std_logic_vector(15 downto 0);
   tx_sndpausreq   : in std_logic;
   tx_fifoctrl     : in std_logic;
     
   ---------------- Input signals to the Rx MAC FIFO I/F --------------- 
   rx_fifo_full    : in std_logic;
   ignore_pkt      : in std_logic;
     
   -------------------- Output signals from the GMII -----------------------
   txd             : out std_logic_vector(7 downto 0);  
   tx_en           : out std_logic;
   tx_er           : out std_logic;
     
   -------------------- Output signals from the CPU I/F -------------------
   hdataout         : out std_logic_vector(7 downto 0);
   hdataout_en_n    : out std_logic;
   hready_n         : out std_logic;
   cpu_if_gbit_en   : out std_logic;
     
   ---------------- Output signals from the Tx MAC FIFO I/F --------------- 
   tx_macread       : out std_logic;
   tx_discfrm       : out std_logic;
   tx_staten        : out std_logic;
   tx_done          : out std_logic;
   tx_statvec       : out std_logic_vector(30 downto 0);
     
   ---------------- Output signals from the Rx MAC FIFO I/F ---------------   
   rx_fifo_error    : out std_logic;
   rx_stat_vector   : out std_logic_vector(31 downto 0);
   rx_dbout         : out std_logic_vector(7 downto 0);
   rx_write         : out std_logic;
   rx_stat_en       : out std_logic;
   rx_eof           : out std_logic;
   rx_error         : out std_logic
   );
end component; 
    
begin       

U1_ts_mac_core_only_core : tsmac36            
port map (                          
   hclk                => hclk,     
   txmac_clk           => txmac_clk, 
   rxmac_clk           => rxmac_clk, 
   reset_n             => reset_n,  
   txmac_clk_en        =>txmac_clk_en,
   rxmac_clk_en        =>rxmac_clk_en,
   rxd                 => rxd,
   rx_dv               => rx_dv,
   rx_er               => rx_er,
   col                 => col,      
   crs                 => crs,      
     
   haddr               => haddr,    
   hdatain             => hdatain,  
   hcs_n               => hcs_n,    
   hwrite_n            => hwrite_n, 
   hread_n             => hread_n,  
  
  
   tx_fifodata         => tx_fifodata,    
   tx_fifoavail        => tx_fifoavail,   
   tx_fifoeof          => tx_fifoeof,     
   tx_fifoempty        => tx_fifoempty,   
   tx_sndpaustim       => tx_sndpaustim,  
   tx_sndpausreq       => tx_sndpausreq,  
   tx_fifoctrl         => tx_fifoctrl,    
   rx_fifo_full        => rx_fifo_full,   
   ignore_pkt          => ignore_pkt,     
   txd                 => txd,
   tx_en               => tx_en,          
   tx_er               => tx_er,          
   hdataout            => hdataout,       
   hdataout_en_n       => hdataout_en_n,  
   hready_n            => hready_n,       
   cpu_if_gbit_en      => cpu_if_gbit_en, 
   
   tx_macread          => tx_macread,    
   tx_discfrm          => tx_discfrm,    
   tx_staten           => tx_staten ,    
   tx_statvec          => tx_statvec,    
   tx_done             => tx_done,       
   rx_fifo_error       => rx_fifo_error, 
   rx_stat_vector      => rx_stat_vector, 
   rx_dbout            => rx_dbout,      
   rx_write            => rx_write,      
   rx_stat_en          => rx_stat_en,    
   rx_eof              => rx_eof,        
   rx_error            => rx_error       
 );   
 
end ts_mac_core_only_top_a;
  
